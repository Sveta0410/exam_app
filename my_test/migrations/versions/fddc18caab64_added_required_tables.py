"""Added required tables

Revision ID: fddc18caab64
Revises: 
Create Date: 2024-06-06 20:22:48.051386

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fddc18caab64'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exam_tb',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('exam_tb', sa.TEXT(), nullable=True),
    sa.Column('section', sa.INTEGER(), nullable=True),
    sa.Column('answer1', sa.TEXT(), nullable=True),
    sa.Column('answer2', sa.TEXT(), nullable=True),
    sa.Column('answer3', sa.TEXT(), nullable=True),
    sa.Column('answer4', sa.TEXT(), nullable=True),
    sa.Column('answer5', sa.TEXT(), nullable=True),
    sa.Column('answer6', sa.TEXT(), nullable=True),
    sa.Column('answer7', sa.TEXT(), nullable=True),
    sa.Column('answer8', sa.TEXT(), nullable=True),
    sa.Column('answer9', sa.TEXT(), nullable=True),
    sa.Column('rightanswer', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pers',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('FIO', sa.TEXT(), nullable=True),
    sa.Column('hash_password', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exam_results',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('result', sa.INTEGER(), nullable=True),
    sa.Column('id_pers', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['id_pers'], ['pers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.UUID(as_uuid=False), server_default=sa.text('(uuid_generate_v4())'), nullable=False),
    sa.Column('expires', sa.DateTime(), nullable=True),
    sa.Column('pers_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['pers_id'], ['pers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tokens_token'), 'tokens', ['token'], unique=True)
    op.create_table('exam_ans',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('question', sa.INTEGER(), nullable=True),
    sa.Column('answer', sa.INTEGER(), nullable=True),
    sa.Column('is_good', sa.Boolean(), nullable=True),
    sa.Column('id_pers', sa.INTEGER(), nullable=True),
    sa.Column('id_attempt', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['id_attempt'], ['exam_results.id'], ),
    sa.ForeignKeyConstraint(['id_pers'], ['pers.id'], ),
    sa.ForeignKeyConstraint(['question'], ['exam_tb.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('exam_ans')
    op.drop_index(op.f('ix_tokens_token'), table_name='tokens')
    op.drop_table('tokens')
    op.drop_table('exam_results')
    op.drop_table('pers')
    op.drop_table('exam_tb')
    # ### end Alembic commands ###
